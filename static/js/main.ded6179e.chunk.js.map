{"version":3,"sources":["img/ImagenPrincipal.jpeg","img/ImagenFinalizacion.jpg","Componentes/PaginaInicio/MenuDesplegable2.js","Firebase/firebase.js","Componentes/PaginaInicio/Card.js","Componentes/ListaSistemas/ListaSis.js","Componentes/Login.js","Componentes/PaginaInicio/header.js","Componentes/Home.js","Componentes/SecuenciaNuevoPro/PrimeraFase/DescripcionGene.js","Componentes/SecuenciaNuevoPro/SegundaFase/FrmGuardarFuncionalidad.js","Componentes/SecuenciaNuevoPro/SegundaFase/ModalFuncionalidad.js","Componentes/SecuenciaNuevoPro/SegundaFase/VistaFuncionalidad.js","Componentes/SecuenciaNuevoPro/TerceraFase/FormularioVarModal.js","Componentes/SecuenciaNuevoPro/TerceraFase/ModalVariables.js","Componentes/SecuenciaNuevoPro/TerceraFase/VistaVariables.js","Componentes/SecuenciaNuevoPro/CuartaFase/FormularioResModal.js","Componentes/SecuenciaNuevoPro/CuartaFase/ModalResponsables.js","Componentes/SecuenciaNuevoPro/CuartaFase/VistaResponsables.js","Componentes/SecuenciaNuevoPro/QuintaFase/ResumenPro.js","Componentes/SecuenciaNuevoPro/QuintaFase/BtnHome.js","Componentes/NuevoProyecto/CrearProject.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","useStyles","makeStyles","theme","root","position","Paper","top","right","left","width","backgroundColor","SimpleMenu","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","anchorEl","setAnchorEl","handleClose","react_default","a","createElement","className","Button","color","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu_default","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","MenuItem","react_router_dom","to","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","card","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","RecipeReviewCard","Card","CardHeader","align","title","CardMedia","image","CardContent","Typography","variant","component","justify","require","ListaSis","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","projects","_this2","firestore","collection","get","then","forEach","doc","data","tile","img","DatosGenerales","foto","nombre","author","cols","push","setState","catch","err","console","log","getProject","_this3","Grid","container","spacing","GridList","gridList","map","GridListTile","key","alt","src","GridListTileBar","titleBar","actionIcon","user","IconButton","aria-label","concat","OpenInNew_default","Component","withStyles","display","flexWrap","justifyContent","overflow","textAlign","flexSize","background","Login","button","margin","borderRadius","boxShadow","alignItems","flexDirection","input","avatar","handleAuth","bind","assertThisInitialized","handleLogout","auth","onAuthStateChanged","provider","GoogleAuthProvider","signInWithPopup","result","error","signOut","sm","displayName","ListaSistemas_ListaSis","renderLoginButton","header","getUserData","name","AppBar","Toolbar","menuButton","grow","padding","flexGrow","marginRight","Circle","radio","Home","Logo","urlfoto","DescripcionGene","handleValue","e","uploadIMG","target","files","defineProperty","textContent","value","descripcion","linea","uploadValue","file","uploadTask","storage","ref","child","put","contentType","on","TaskEvent","STATE_CHANGED","snapshot","progress","bytesTransferred","totalBytes","code","getDownloadURL","downloadURL","db","colection","Date","now","setCurrentProject","nameProject","set","Funcionalidades","Variables","Responsables","clearform","TextField","onChange","fullWidth","label","multiline","Autocomplete","freeSolo","disableClearable","options","Lineas","option","renderInput","params","assign","InputProps","objectSpread","type","Input","htmlFor","PhotoCamera_default","max","SendValue","style","marginTop","FormularioModal","funcionalidad","CurrentProject","undefined","colaborador","status","update","refreshList","Funtions","rand","Math","round","random","getModalStyle","fab","bottom","paper","palette","border","shadows","SimpleModal","modalStyle","_React$useState3","_React$useState4","setOpen","Fab","Add_default","Modal","aria-labelledby","aria-describedby","FrmGuardarFuncionalidad","VistaFuncionalidad","rows","dRaw","funcion","nFuncionalidades","fn","deletedby","getData","_this4","xs","Table","table","TableHead","TableRow","TableCell","TableBody","length","scope","startIcon","Delete_default","delete","item","direction","placement","overflowX","minWidth","FormularioVarModal","variable","VarVIH","TerceraFase_FormularioVarModal","VistaVariables","nVariables","vr","ModalVariables_SimpleModal","respon","FormularioResModal","responsable","Responsable","alingItems","CuartaFase_FormularioResModal","VistaResponsables","nResponsables","rp","ModalResponsables_SimpleModal","ResumenPro","getData2","_this5","getData3","_this6","_this7","getData4","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","ExpansionPanelDetails","ContainedButtons","instructions","marginBottom","HorizontalLinearStepper","activeStep","setActiveStep","Set","skipped","setSkipped","_React$useState5","_React$useState6","idloaded","SetId","steps","_useState","_useState2","project","setProject","_useParams","useParams","nproject","isStepSkipped","step","has","Stepper","index","stepProps","completed","Step","StepLabel","Image","PrimeraFase_DescripcionGene","SegundaFase_VistaFuncionalidad","TerceraFase_VistaVariables","CuartaFase_VistaResponsables","QuintaFase_ResumenPro","getStepContent","disabled","prevActiveStep","newSkipped","values","App","PaginaInicio_header","react_router","path","Login_Login","CrearProject","BtnHome","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ded6179e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ImagenPrincipal.b87f49d5.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/ImagenFinalizacion.3255c2cc.jpg\";","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n  root: {\r\n    position: 'relative',\r\n\r\n\r\n  },\r\n  Paper: {\r\n\r\n    position: 'absolute',\r\n    top: 65,\r\n    right: -20,\r\n    left: -20,\r\n    width: 140,\r\n    backgroundColor: \"white\"\r\n  }\r\n\r\n}));\r\n\r\n\r\nexport default function SimpleMenu() {\r\n\r\n\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button color=\"inherit\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} >\r\n        <MenuIcon />\r\n      </Button>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        keepMounted\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n\r\n      >\r\n        <MenuItem onClick={handleClose}><Link to=\"/Login\">Login</Link></MenuItem>\r\n        <MenuItem onClick={handleClose}><Link to=\"/Home\">Home</Link></MenuItem>\r\n\r\n      </Menu>\r\n\r\n    </div>\r\n  );\r\n\r\n}\r\n","import firebase from 'firebase';\r\n\r\n\r\n\r\n  // Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyD4dkmERNiFzrbnyQy3lgMeHtbZsCPfC5Y\",\r\n    authDomain: \"login-proyecto-5bcc4.firebaseapp.com\",\r\n    databaseURL: \"https://login-proyecto-5bcc4.firebaseio.com\",\r\n    projectId: \"login-proyecto-5bcc4\",\r\n    storageBucket: \"login-proyecto-5bcc4.appspot.com\",\r\n    messagingSenderId: \"517292472560\",\r\n    appId: \"1:517292472560:web:9b93604317f9bc38736a35\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export default firebase; ","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    maxWidth: 500,\r\n  },\r\n  media: {\r\n    \r\n    height: 50,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  \r\n}));\r\n\r\nexport default function RecipeReviewCard() {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  function handleExpandClick() {\r\n    setExpanded(!expanded);\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardHeader align=\"center\"\r\n         title=\"Bienvenidos\"\r\n      />\r\n      <CardMedia \r\n        className={classes.media}\r\n        image=\"https://www.gradiant.org/wp-content/uploads/2019/03/eSalud_02_cabecera.jpg\"\r\n        title=\"Logo\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" justify=\"center\">\r\n         FrameD-Sis (Framework para el desarrollo colaborativo de sistemas de información en salud)\r\n          \r\n        </Typography>\r\n      </CardContent>\r\n      \r\n      \r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport StarBorderIcon from '@material-ui/icons/OpenInNew';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { Link } from \"react-router-dom\";\r\nvar firebase = require(\"firebase/app\");\r\n// Add the Firebase products that you want to use\r\nrequire(\"firebase/firestore\");\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = {\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    // height: 450,\r\n    // backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    width: 700,\r\n    height: 650,\r\n  },\r\n\r\n  title: {\r\n    // color: theme.palette.primary.light,\r\n    color: 'default',\r\n    textAlign: 'center',\r\n    flexSize: '50',\r\n  },\r\n  titleBar: {\r\n    background:\r\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n  },\r\n  img: {\r\n\r\n    // maxWidth: 400,\r\n    overflow: 'hidden',\r\n    display: 'block',\r\n    width: '100%',\r\n\r\n\r\n  }\r\n};\r\n\r\nclass ListaSis extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      projects: []\r\n    }\r\n  }\r\n  getProject() {\r\n\r\n    var db = firebase.firestore();\r\n    //this.setState({ funcionalidad: this.props.funcionalidad })\r\n    let ListRef = db.collection(\"ListColections\").get()\r\n      .then(collection => {\r\n\r\n        collection.forEach((doc) => {\r\n          let data = doc.data()\r\n\r\n\r\n          let tile = {\r\n            img: data.DatosGenerales.foto,\r\n            title: data.DatosGenerales.nombre,\r\n            author: data.DatosGenerales.author,\r\n            cols: 1,\r\n            id: doc.id\r\n          }\r\n          let projects = this.state.projects\r\n          projects.push(tile)\r\n          this.setState({ projects })\r\n\r\n        });\r\n      })\r\n\r\n      .catch((err) => {\r\n        console.log('error de message', err);\r\n      });\r\n  }\r\n  componentDidMount() {\r\n    this.getProject()\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid container spacing={24}>\r\n          <GridList className={classes.gridList} cols={3}>\r\n            {this.state.projects.map(tile => (\r\n              <GridListTile key={tile.img} cols={tile.cols || 1}>\r\n\r\n\r\n                <img className={classes.img} alt={tile.title} src={tile.img} />\r\n\r\n\r\n                <GridListTileBar\r\n\r\n                  title={tile.title}\r\n                  classes={{\r\n                    root: classes.titleBar,\r\n                    title: classes.title,\r\n\r\n                  }}\r\n                  actionIcon={\r\n\r\n                    <Link to={\"/CrearProject/\" + tile.id + \"/\" + this.props.user}><IconButton aria-label={`star ${tile.title}`}>\r\n                      <StarBorderIcon className={classes.title} />\r\n                    </IconButton>\r\n                    </Link>\r\n                  }\r\n                />\r\n\r\n              </GridListTile>\r\n            ))}\r\n          </GridList>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(ListaSis);","import React, { Component } from 'react'\r\nimport firebase from '../Firebase/firebase'\r\nimport Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Carta from './PaginaInicio/Card'\r\nimport ListaSys from './ListaSistemas/ListaSis'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    height: 48,\r\n    borderRadius: 3,\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: 170,\r\n    justifyContent: 'justify',\r\n    flexDirection: 'row',\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  avatar: {\r\n    margin: 10,\r\n  }\r\n\r\n\r\n}));\r\n\r\n\r\nexport default class Login extends Component {\r\n\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      user: null\r\n    };\r\n    this.handleAuth = this.handleAuth.bind(this);\r\n    this.handleLogout = this.handleLogout.bind(this);\r\n\r\n  }\r\n\r\n\r\n\r\n  componentWillMount() {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      this.setState({ user });\r\n    });\r\n  }\r\n\r\n\r\n  handleAuth() {\r\n    let provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n    firebase.auth().signInWithPopup(provider)\r\n\r\n      .then(result => console.log('${result.user.email} ha iniciado sesion'))\r\n      .catch(error => console.log(error));\r\n\r\n  }\r\n\r\n  handleLogout() {\r\n    firebase.auth().signOut()\r\n      .then(result => console.log('${result.user.email} ha salido sesion'))\r\n      .catch(error => console.log(' Error ${error.code}: ${error.message}'));\r\n  }\r\n\r\n  renderLoginButton() {\r\n\r\n    //Si el usuario esta logueado\r\n    if (this.state.user) {\r\n\r\n      return (\r\n        <div>\r\n          <Grid container spacing={24} align=\"right\" >\r\n            <Grid sm={12}  >\r\n\r\n              <Typography variant=\"h4\" align=\"left\">\r\n               Hola  {this.state.user.displayName }, aquí puedes ver los proyectos\r\n             </Typography>\r\n              <div align=\"center\">\r\n              <Button variant=\"contained\" onClick={this.handleLogout}>Salir</Button>\r\n              <Button variant=\"contained\"  ><Link to={\"/CrearProject/new/\"+this.state.user.displayName}>Crear Proyecto</Link></Button>\r\n\r\n              </div>\r\n\r\n\r\n\r\n              <br />\r\n              <br />\r\n              <ListaSys user={this.state.user.displayName} />\r\n            </Grid>\r\n\r\n          </Grid>\r\n          <br />\r\n          <br />\r\n\r\n\r\n\r\n\r\n          {/* <br />\r\n          <br />\r\n          <Grid container spacing={24} justify=\"center\" >\r\n           \r\n          </Grid> */}\r\n        </div>\r\n\r\n      );\r\n    } else {\r\n      return (\r\n\r\n        <div >\r\n\r\n          <Grid container spacing={24} justify=\"center\" >\r\n            <Carta />\r\n          </Grid>\r\n\r\n          <br />\r\n          <br />\r\n\r\n          <Grid container spacing={24} justify=\"center\" >\r\n            {/* // Si no lo está logueado */}\r\n            <Button variant=\"contained\" onClick={this.handleAuth} >\r\n              Iniciar Sesion\r\n            </Button>\r\n          </Grid>\r\n\r\n        </div>\r\n\r\n\r\n      );\r\n\r\n\r\n\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div >\r\n        <br />\r\n        <br />\r\n        <Grid container spacing={24} justify=\"center\" >\r\n\r\n          <p>{this.renderLoginButton()}</p>\r\n\r\n        </Grid>\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n//import AvatarImg from './Avatar';\r\nimport Desplegable1 from './MenuDesplegable2';\r\n// import MenuPeq from './MenuDesplegable';\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Login from '../Login'\r\nimport firebase from '../../Firebase/firebase.js'\r\n\r\nconst styles = {\r\n  root: {\r\n    padding: '5px',\r\n    flexGrow: 1,\r\n    background: 'white',\r\n  },\r\n  grow: {\r\n    padding: '5px',\r\n        flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n  Button: {\r\n    background: '#004E81'\r\n  },\r\n  Circle: {\r\n    radio: '30px',\r\n    marginLeft: 30,\r\n    marginRight: 0\r\n  }\r\n};\r\n\r\n\r\nclass header extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      user: {},\r\n      name:\"\"\r\n    }\r\n  }\r\n\r\n  getUserData = (user) => {\r\n    this.setState({ user })\r\n  }\r\n\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" >\r\n          <Toolbar>\r\n\r\n            <Desplegable1 className={classes.menuButton} />\r\n            <br />\r\n            <br />\r\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow} align=\"center\">\r\n              Framework para el Diseño de Sistemas de Informacion en Salud <br/> FrameD-SIS\r\n          </Typography>          \r\n          \r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(header);","import React from 'react'\r\nimport Logo from '../img/ImagenPrincipal.jpeg';\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\n\r\nclass Home extends React.Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div >\r\n        <Grid container={24} justify=\"center\">\r\n\r\n          {/* <img src=\"link de la img\" height=\"450\" width=\"800\"/> --> imagen desde la web */}\r\n\r\n          {/* Aqui va la imagen de manera local  */}\r\n          <img src={Logo} height=\"450\" width=\"800\" />\r\n\r\n        </Grid>\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\nexport default Home;","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Input from '@material-ui/core/Input'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nvar firebase = require(\"firebase/app\");\r\n// Add the Firebase products that you want to use\r\nrequire(\"firebase/firestore\");\r\n\r\nvar urlfoto = null\r\n\r\nconst useStyles = {\r\n\r\n  input: {\r\n    display: 'none'\r\n  }\r\n};\r\n\r\nclass DescripcionGene extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n\r\n      nombre: \"\",\r\n      descripcion: \"\",\r\n      linea: \"\",\r\n      author: this.props.user,\r\n      foto: \"\",\r\n      uploadValue: 0,\r\n\r\n    }\r\n  }\r\n  handleValue = (e, key) => {\r\n    if (key == \"foto\") {\r\n      this.uploadIMG(e.target.files[0])\r\n\r\n\r\n    } else {\r\n      if (key == \"linea\")\r\n        this.setState({ [key]: e.target.textContent })\r\n      else\r\n        this.setState({ [key]: e.target.value })\r\n    }\r\n  }\r\n  clearform() {\r\n    this.setState({ nombre: \"\", descripcion: \"\", linea: \"\", author: \"\", foto: \"\" })\r\n  }\r\n\r\n  uploadIMG(file) {\r\n\r\n\r\n    // Create the file metadata\r\n    var metadata = {\r\n      contentType: 'image/jpeg'\r\n    };\r\n    var storage = firebase.storage();\r\n    var storageRef = storage.ref();\r\n    // Upload file and metadata to the object 'images/mountains.jpg'\r\n    var uploadTask = storageRef.child('ForDatosGe/' + file.name).put(file, metadata);\r\n\r\n    // Listen for state changes, errors, and completion of the upload.\r\n    uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n      (snapshot) => {\r\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n        var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n        this.setState({\r\n          uploadValue: progress\r\n        })\r\n        // console.log('Upload is ' + progress + '% done');\r\n\r\n        // switch (snapshot.state) {\r\n        //   case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n        //     console.log('Upload is paused');\r\n        //     break;\r\n        //   case firebase.storage.TaskState.RUNNING: // or 'running'\r\n        //     console.log('Upload is running');\r\n        //     break;\r\n\r\n\r\n        // }\r\n      }, function (error) {\r\n        // A full list of error codes is available at\r\n        // https://firebase.google.com/docs/storage/web/handle-errors\r\n        switch (error.code) {\r\n          case 'storage/unauthorized':\r\n            // User doesn't have permission to access the object\r\n            break;\r\n\r\n          case 'storage/canceled':\r\n            // User canceled the upload\r\n            break;\r\n\r\n\r\n          case 'storage/unknown':\r\n            // Unknown error occurred, inspect error.serverResponse\r\n            break;\r\n        }\r\n      }, () => {\r\n        // Upload completed successfully, now we can get the download URL\r\n        uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n          urlfoto = downloadURL\r\n        });\r\n      });\r\n\r\n\r\n  }\r\n\r\n  SendValue() {\r\n\r\n    var db = firebase.firestore();\r\n    \r\n    var colection = this.state.nombre + \"_\" + Date.now();\r\n    this.props.setCurrentProject({ nameProject: colection, descripcion: this.state.descripcion, linea: this.state.linea , author: this.state.author, foto: this.state.foto})\r\n    this.setState({ colection });\r\n\r\n    var docRef = db.collection(\"ListColections\").doc(colection);\r\n    var setAlan = docRef.set({\r\n      \"DatosGenerales\": {\r\n\r\n\r\n        nombre: this.state.nombre,\r\n        descripcion: this.state.descripcion,\r\n        linea: this.state.linea,\r\n        author: this.state.author,\r\n        foto: urlfoto\r\n\r\n      },\r\n      Funcionalidades: [],\r\n      Variables: [],\r\n      Responsables: [],\r\n     \r\n    });\r\n\r\n    this.clearform()\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n\r\n      <Grid container={24} align='center'>\r\n        <div>\r\n          <br />\r\n          <br />\r\n\r\n\r\n          <TextField value={this.state.nombre} onChange={(e) => this.handleValue(e, \"nombre\")} fullWidth={true} label={\"Nombre del proyecto\"} />\r\n          <TextField value={this.state.descripcion} onChange={(e) => this.handleValue(e, \"descripcion\")} fullWidth={true} label={\"Descripcion\"} multiline />\r\n\r\n\r\n          <Autocomplete value={this.state.linea} onChange={(e) => this.handleValue(e, \"linea\")}\r\n\r\n            freeSolo\r\n            disableClearable\r\n            options={Lineas.map(option => option.title)}\r\n            renderInput={params => (\r\n              <TextField\r\n                {...params}\r\n\r\n                label=\"Linea de Enfoque\"\r\n                fullWidth={true}\r\n                InputProps={{ ...params.InputProps, type: 'search' }}\r\n              />\r\n\r\n            )}\r\n          />\r\n\r\n          <TextField value={this.state.author} onChange={(e) => this.handleValue(e, \"author\")} fullWidth={true} label={\"Autor del proyecto\"} />\r\n          <br />\r\n\r\n          <Input className={classes.input} id=\"Img\" type=\"file\" value={this.state.foto} onChange={(e) => this.handleValue(e, \"foto\")} fullWidth={true} label={\"Imagen\"} />\r\n          <label htmlFor=\"Img\">\r\n            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n              <PhotoCamera />\r\n            </IconButton>\r\n          </label>\r\n          <progress value={this.state.uploadValue} max=\"100\" ></progress>\r\n\r\n          <br />\r\n          <Button onClick={() => this.SendValue()} style={{ marginTop: 10 }} variant=\"contained\" color=\"primary\"> Guardar</Button>\r\n        </div>\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n// Lineas por parte de la ontologia \r\nconst Lineas = [\r\n  { title: 'ITS y VIH ' },\r\n  { title: 'Maternidad Segura' },\r\n  { title: 'Violencia de Genero' },\r\n  { title: 'Planificación Familiar' },\r\n  { title: 'CCU y Prostata' },\r\n  { title: 'Uso de Metodos Anticonceptivos' },\r\n\r\n];\r\n\r\nexport default withStyles(useStyles)(DescripcionGene);\r\n","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nvar firebase = require(\"firebase/app\");\r\n// Add the Firebase products that you want to use\r\nrequire(\"firebase/firestore\");\r\n \r\n\r\nclass FormularioModal extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            funcionalidad: [],\r\n              \r\n          \r\n        }\r\n    }\r\n    handleValue = (e, key) => {\r\n        this.setState({ [key]: e.target.textContent })\r\n\r\n    }\r\n    clearform() {\r\n        this.setState({ funcionalidad: [] })\r\n    }\r\n    SendValue() {\r\n             \r\n        var  CurrentProject = this.props.CurrentProject\r\n\r\n        if(CurrentProject[\"Funcionalidad\"]==undefined)\r\n        // aqui se crea el estado para colaborador y el estado de creado \r\n            CurrentProject[\"Funcionalidad\"] = [{colaborador:this.props.user,funcionalidad:this.state.funcionalidad,status:\"created\"}]\r\n        else\r\n              CurrentProject[\"Funcionalidad\"].push({colaborador:this.props.user,funcionalidad:this.state.funcionalidad,status:\"created\"})\r\n        \r\n        this.props.setCurrentProject(CurrentProject)\r\n        var db = firebase.firestore();\r\n\r\n        // console.log(\"nombre_project\", this.props.CurrentProject.nameProject);\r\n\r\n        var docRef = db.collection(\"ListColections\").doc(this.props.CurrentProject.nameProject);\r\n        \r\n        var setAda = docRef.update({\"Funcionalidades\":CurrentProject[\"Funcionalidad\"]});\r\n            \r\n        this.props.handleClose()\r\n        this.props.refreshList()\r\n        this.clearform()\r\n    }\r\n    render() {\r\n        return (\r\n            <Grid container={24} justify=\"center\">\r\n                <div>\r\n\r\n\r\n                    <Autocomplete value={this.state.funcionalidad} onChange={(e) => this.handleValue(e, \"funcionalidad\")}\r\n\r\n                        freeSolo\r\n                        disableClearable\r\n                        options={Funtions.map(option => option.title)}\r\n                        style={{ width: 300 }}\r\n                        renderInput={params => (\r\n                            <TextField\r\n                                {...params}\r\n                                label=\"Funcionalidad\"\r\n                                InputProps={{ ...params.InputProps, type: 'search' }}\r\n                                fullWidth />\r\n                        )}\r\n                    />\r\n                    <br />\r\n                    <br />\r\n                    {/* <TextField value={this.state.descripcion} onChange={(e)=>this.handleValue(e,\"descripcion\")} fullWidth={true} label={\"Descripcion\"}multiline/>\r\n            <TextField value={this.state.linea} onChange={(e)=>this.handleValue(e,\"linea\")} fullWidth={true} label={\"Linea\"} />\r\n            <TextField value={this.state.author} onChange={(e)=>this.handleValue(e,\"author\")} fullWidth={true} label={\"Author\"} />*/}\r\n                    <Button onClick={() => this.SendValue()} style={{ marginTop: 10 }} variant=\"contained\" color=\"primary\"> Guardar</Button>\r\n\r\n                </div>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nconst Funtions = [\r\n    { title: 'Criterios generales' },\r\n    { title: 'Administrar historial clínico' },\r\n    { title: 'Gestionar alergia, intolerancia y lista de reacciones adversas' },\r\n    { title: 'Administrar lista de medicamentos' },\r\n    { title: 'Gestionar lista de problemas' },\r\n    { title: 'Administrar la lista de factores relacionados con la salud' },\r\n    { title: 'Administrar la lista de vacunas' },\r\n    { title: 'Administrar equipos médicos, prótesis / ortesis, lista de dispositivos' },\r\n    { title: 'Gestionar las preferencias de pacientes y familiares' },\r\n    { title: 'Gestionar eventos adversos' },\r\n    { title: 'Renderizar información de fuentes externas' },\r\n    { title: 'Renderizar documentos clínicos de origen externo' },\r\n    { title: 'Renderizar datos de origen externo' },\r\n    { title: 'Renderizar datos originados del sistema médico de emergencia' },\r\n    { title: 'Renderizar imágenes clínicas de origen externo' },\r\n    { title: 'Administrar datos originados por el paciente' },\r\n    { title: 'Gestionar documentación clínica' },\r\n    { title: 'Evaluaciones de conducta' },\r\n    { title: 'Gestionar mediciones clínicas del paciente' },\r\n    { title: 'Gestionar documentos clínicos y notas' },\r\n    { title: 'Gestionar planes de atención y tratamiento específicos para el paciente' },\r\n    { title: 'Reconocer / modificar la documentación de otro proveedor' },\r\n    { title: 'Gestionar pedidos' },\r\n    { title: 'Usar conjuntos de órdenes' },\r\n    { title: 'Administrar pedidos de medicamentos' },\r\n    { title: 'Control de interacciones de medicamentos y alergias' },\r\n    { title: 'Dosificación y advertencias de medicamentos específicos del paciente' },\r\n    { title: 'Eficiencias de la orden de medicación' },\r\n    { title: 'Anulaciones de alerta de medicación' },\r\n    { title: 'Gestionar pedidos de atención al paciente sin medicamentos' },\r\n    { title: 'Gestionar pedidos para pruebas de diagnóstico' },\r\n    { title: 'Gestionar pedidos de productos sanguíneos y otros productos biológicos' },\r\n    { title: 'Gestionar pedidos de referencia' },\r\n    { title: 'Gestionar resultados' },\r\n    { title: 'Gestionar resultados de pruebas de diagnóstico' },\r\n    { title: 'Administrar la administración de medicamentos, inmunizaciones y tratamientos' },\r\n    { title: 'Administrar la administración de medicamentos' },\r\n    { title: 'Administrar la administración de vacunas' },\r\n    { title: 'Administrar administración de tratamiento' },\r\n    { title: 'Gestionar la atención futura' },\r\n    { title: 'Pautas y protocolos actuales para planificar la atención' },\r\n    { title: 'Administrar recomendaciones para el cuidado futuro' },\r\n    { title: 'Gestionar la educación y comunicación del paciente' },\r\n    { title: 'Generar, registrar y distribuir instrucciones específicas del paciente' },\r\n    { title: 'Administre la coordinación e informes de atención' },\r\n    { title: 'Producir un registro resumido de la atención' },\r\n    { title: 'Capturar información del informe del servicio de salud' },\r\n    { title: 'Gestión de registros' },\r\n    { title: 'Administrar un registro de paciente' },\r\n\r\n    //las primeras 50 funcionalidades  \r\n\r\n    { title: 'Gestionar la demografía del paciente' },\r\n    { title: 'Capturar registro rápido' },\r\n    { title: 'Solicitud de referencia de captura' },\r\n    { title: 'Gestionar encuentro con pacientes' },\r\n    { title: 'Sujeto a relación de sujeto' },\r\n    { title: 'Relacionado por Genealogía' },\r\n    { title: 'Relacionado por el seguro' },\r\n    { title: 'Relacionado por la situación de vida' },\r\n    { title: 'Relacionado por otros medios' },\r\n    { title: 'Preferencias, Directivas, Consentimientos y Autorizaciones' },\r\n    { title: 'Apoyo a las preferencias de pacientes y familiares' },\r\n    { title: 'Administrar instrucciones anticipadas para pacientes' },\r\n    { title: 'Gestionar consentimientos y autorizaciones' },\r\n    { title: 'Soporte de información de origen externo' },\r\n    { title: 'Soporte de documentos clínicos de origen externo' },\r\n    { title: 'Admite datos clínicos de origen externo' },\r\n    { title: 'Soporte de datos originados por el sistema médico de emergencia' },\r\n    { title: 'Admite imágenes clínicas de origen externo' },\r\n    { title: 'Soporte de datos originados por el paciente' },\r\n    { title: 'Respaldar los datos de salud del paciente derivados de datos y documentación' },\r\n    { title: 'administrativa y financiera' },\r\n    { title: 'Datos de pacientes de soporte derivados de la elegibilidad, el formulario y la documentación de beneficios para la prescripción electrónica independiente' },\r\n    { title: 'Soporte de datos originados en dispositivos médicos' },\r\n    { title: 'Documentación clínica de soporte' },\r\n    { title: 'Soporte para evaluaciones estándar' },\r\n    { title: 'Apoyo para evaluaciones conducidas por el contexto del paciente' },\r\n    { title: 'Soporte para planes de atención estándar, pautas, protocolos' },\r\n    { title: 'Soporte para planes, pautas y protocolos de atención sensibles al contexto' },\r\n    { title: 'Apoyo a los protocolos de investigación relacionados con la atención individual del paciente' },\r\n    { title: 'Apoyo el autocuidado' },\r\n    { title: 'Pautas y estándares de captura de fuentes externas' },\r\n    { title: 'Gestionar la documentación de la respuesta del médico a las indicaciones de apoyo a la decisión' },\r\n    { title: 'Actualización de las pautas del sistema de soporte de decisiones clínicas' },\r\n    { title: 'Apoyo para la identificación de posibles problemas y tendencias' },\r\n    { title: 'Apoyo la documentación de otros encuentros y episodios de atención' },\r\n    { title: 'Gestionar la calidad del registro de información de salud' },\r\n    { title: 'Órdenes de soporte' },\r\n    { title: 'Administrar plantillas de conjunto de pedidos' },\r\n    { title: 'Soporte para pedidos de medicamentos e inmunización' },\r\n    { title: 'Soporte para la interacción de medicamentos y el control de alergias' },\r\n    { title: 'Soporte para dosis y advertencias específicas del paciente' },\r\n    { title: 'Soporte para la eficiencia de pedidos de medicamentos' },\r\n    { title: 'Soporte para recomendaciones de medicación' },\r\n    { title: 'Apoyo para la reconciliación de medicamentos' },\r\n    { title: 'Soporte para pedidos sin medicamentos' },\r\n    { title: 'Órdenes de soporte para pruebas de diagnóstico' },\r\n    { title: 'Órdenes de soporte para productos sanguíneos y otros productos biológicos' },\r\n    { title: 'Soporte para referencias' },\r\n    { title: 'Apoyo para el proceso de referencia' },\r\n    { title: 'Soporte para recomendaciones de referencias' },\r\n    { title: 'Soporte para pedidos de referencias electrónicas' },\r\n\r\n    //100 Funcionalidades\r\n\r\n    { title: 'Apoyo a los resultados' },\r\n    { title: 'Administración de tratamiento de apoyo' },\r\n    { title: 'Apoyo para la administración de medicamentos' },\r\n    { title: 'Apoyo a la Administración de Inmunizaciones' },\r\n    { title: 'Apoyo para la administración segura de sangre' },\r\n    { title: 'Soporte para la recogida precisa de muestras' },\r\n    { title: 'Apoyo la atención futura' },\r\n    { title: 'Acceda a la guía de atención médica' },\r\n    { title: 'Apoyo a la educación y comunicación del paciente' },\r\n    { title: 'Acceso al conocimiento del paciente' },\r\n    { title: 'Actualizaciones de material educativo para pacientes' },\r\n    { title: 'Actualizaciones de información de recordatorio del paciente' },\r\n    { title: 'Soporte para comunicaciones entre el proveedor y el paciente y / o el representante del paciente' },\r\n    { title: 'Educación para pacientes, familiares y cuidadores' },\r\n    { title: 'Comunicación con sistemas de registros de salud personal' },\r\n    { title: 'Coordinación e informes de atención de apoyo' },\r\n    { title: 'Gestión y soporte de comunicación clínica' },\r\n    { title: 'Soporte para la comunicación entre proveedores' },\r\n    { title: 'Gestionar solicitudes de consulta y respuestas' },\r\n    { title: 'Apoyo al proveedor para la comunicación profesional' },\r\n    { title: 'Apoyo a la comunicación entre proveedores y farmacias' },\r\n    { title: 'Resultado del registro de salud' },\r\n    { title: 'Generación de informes estándar' },\r\n    { title: 'Consulta ad hoc y renderizado' },\r\n    { title: 'Vista de información' },\r\n    { title: 'Administrar ayuda para el usuario' },\r\n    { title: 'Apoyo para el mantenimiento de la salud, cuidado preventivo y bienestar' },\r\n    { title: 'Alertas actuales para servicios preventivos y bienestar' },\r\n    { title: 'Presentar notificaciones y recordatorios para servicios preventivos y bienestar' },\r\n    { title: 'Apoyar la investigación epidemiológica basada en la población' },\r\n    { title: 'Soporte para la recopilación de datos de investigación epidemiológica' },\r\n    { title: 'Soporte para análisis de datos epidemiológicos' },\r\n    { title: 'Soporte para compartir datos de cohortes y agregados' },\r\n    { title: 'Soporte para notificaciones y respuestas' },\r\n    { title: 'Soporte para monitorear notificaciones de respuesta con respecto a la salud de un paciente específico' },\r\n    { title: 'Apoyo de gestión de donantes' },\r\n    { title: 'Medición, Análisis, Investigación e Informes' },\r\n    { title: 'Medidas de resultado y análisis' },\r\n    { title: 'Medidas de rendimiento y rendición de cuentas' },\r\n    { title: 'Apoyo a la mejora de procesos' },\r\n    { title: 'Compatibilidad con los indicadores de rendimiento del sistema de atención (paneles)' },\r\n    { title: 'Actualizaciones relacionadas con la salud pública' },\r\n    { title: 'Gestión de solicitud de datos desidentificados' },\r\n    { title: 'Apoyar la gestión de salud consistente de grupos de pacientes o poblaciones' },\r\n    { title: 'Gestionar identificadores relacionados con el estudio de salud de la población' },\r\n    { title: 'Administrar información del proveedor' },\r\n    { title: 'Administrar registro o directorio de proveedores' },\r\n    { title: 'Gestionar la ubicación del proveedor dentro de la instalación' },\r\n    { title: 'Ubicación de la llamada del proveedor' },\r\n    { title: 'Administrar la (s) ubicación (es) u oficina (s) del proveedor' },\r\n\r\n    //150 Funcionalidades \r\n\r\n    { title: 'Registro o directorio de equipo / grupo de proveedores' },\r\n    { title: 'Proveedor de casos / panel' },\r\n    { title: 'Gestionar las relaciones entre profesionales y pacientes' },\r\n    { title: 'Administre la demografía del paciente, la ubicación y la sincronización' },\r\n    { title: 'Sincronizar datos demográficos del paciente' },\r\n    { title: 'Administrar la ubicación del paciente dentro de una instalación' },\r\n    { title: 'Gestionar la residencia del paciente para la prestación y administración de servicios' },\r\n    { title: 'Administrar asignación de cama del paciente' },\r\n    { title: 'Administrar directivas de consentimiento de privacidad del paciente' },\r\n    { title: 'Administrar la interacción del registro de salud personal' },\r\n    { title: 'Gestionar el intercambio de información con el paciente PHR' },\r\n    { title: 'Administre archivos PHR legales y otros relacionados' },\r\n    { title: 'Gestionar consentimientos y autorizaciones desde un PHR' },\r\n    { title: 'Administre los documentos de fin de vida útil de PHR y otras directivas anticipadas' },\r\n    { title: 'Gestionar comunicación' },\r\n    { title: 'Administrar la comunicación del registro' },\r\n    { title: 'Soporte para comunicaciones dentro de una organización' },\r\n    { title: 'Apoyo a las comunicaciones entre organizaciones' },\r\n    { title: 'Soporte para comunicaciones proveedor-empleador' },\r\n    { title: 'Gestionar tareas de flujo de trabajo clínico' },\r\n    { title: 'Creación de tareas clínicas, asignación y enrutamiento' },\r\n    { title: 'Asignación de tareas clínicas y enrutamiento para la administración y administración de medicamentos' },\r\n    { title: 'Enlace de tareas clínicas' },\r\n    { title: 'Seguimiento del estado de la tarea clínica' },\r\n    { title: 'Administrar disponibilidad de recursos' },\r\n    { title: 'Gestionar la demografía de las instalaciones' },\r\n    { title: 'Gestionar la información de disponibilidad de recursos sanitarios' },\r\n    { title: 'Gestionar la programación de recursos sanitarios' },\r\n    { title: 'Categorización de clasificación de soporte' },\r\n    { title: 'Apoyo a la gestión de la sala de espera' },\r\n    { title: 'Apoyo la determinación de la agudeza y la gravedad del paciente' },\r\n    { title: 'Encuentro de apoyo / Episodio de gestión de la atención' },\r\n    { title: 'Administrar filtros de presentación' },\r\n    { title: 'Documentación de encuentro de soporte' },\r\n    { title: 'Apoyo a la información financiera' },\r\n    { title: 'Apoyar los servicios de atención médica remota' },\r\n    { title: 'Gestionar transiciones de atención y pacientes dados de alta' },\r\n    { title: 'Gestionar el acceso a la información para uso complementario' },\r\n    { title: 'Soporte de codificación clínica basada en reglas' },\r\n    { title: 'Soporte de codificación financiera y administrativa basada en reglas' },\r\n    { title: 'Apoyar la integración de información financiera / de costos en la atención al paciente' },\r\n    { title: 'Gestionar la información de rendimiento de las instalaciones sanitarias' },\r\n    { title: 'Soporte para capacitación de proveedores' },\r\n    { title: 'Gestionar el procesamiento de transacciones administrativas' },\r\n    { title: 'Apoyar la inscripción en el plan financiero' },\r\n    { title: 'Apoyar la verificación de elegibilidad financiera' },\r\n    { title: 'Autorizaciones de servicio de soporte' },\r\n    { title: 'Solicitudes y reclamos de servicio de soporte' },\r\n    { title: 'Respaldar reclamos financieros e informes de encuentros' },\r\n\r\n    //200 Funcionalidades \r\n\r\n    { title: 'Registro de ciclo de vida y vida útil' },\r\n    { title: 'Grabar ciclo de vida' },\r\n    { title: 'Originar y retener registro de entrada' },\r\n    { title: 'Evidencia de registro de entrada originar / retener evento' },\r\n    { title: 'Modificar contenido de entrada de registro' },\r\n    { title: 'Evidencia de evento de modificación de entrada de registro' },\r\n    { title: 'Traducir contenido de entrada de registro' },\r\n    { title: 'Evidencia de entrada de registro Traducir evento' },\r\n    { title: 'Atestiguar el contenido de la entrada de registro' },\r\n    { title: 'Evidencia de evento de certificación de entrada de registro' },\r\n    { title: 'Ver / acceder al contenido de la entrada de registro' },\r\n    { title: 'Evidencia de evento de acceso / vista de entrada de registro' },\r\n    { title: 'Contenido de entrada de registro de salida / informe' },\r\n    { title: 'Evidencia de registro de entrada de salida / informe de evento' },\r\n    { title: 'Divulgar contenido de entrada de registro' },\r\n    { title: 'Evidencia de evento de divulgación de entrada de registro' },\r\n    { title: 'Transmitir contenido de entrada de registro' },\r\n    { title: 'Evidencia de evento de transmisión de entrada de registro' },\r\n    { title: 'Recibir y retener entradas de registros' },\r\n    { title: 'Evidencia de registro de entrada Recibir / Retener evento' },\r\n    { title: 'Desidentificar entradas de registro' },\r\n    { title: 'Prueba de evento de desidentificación de entrada de registro' },\r\n    { title: 'Pseudominizar entradas de registro' },\r\n    { title: 'Evidencia de registro de evento de seudominización de entrada' },\r\n    { title: 'Vuelva a identificar las entradas de registro' },\r\n    { title: 'Volver a identificar el desencadenador de auditoría de entrada de registro' },\r\n    { title: 'Extraer contenido de entrada de registro' },\r\n    { title: 'Evidencia de evento de extracción de entrada de registro' },\r\n    { title: 'Entradas de registro de archivo' },\r\n    { title: 'Evidencia de evento de archivo de entrada de registro' },\r\n    { title: 'Restaurar entradas de registro (archivadas previamente)' },\r\n    { title: 'Evidencia de evento de restauración de entrada de registro' },\r\n    { title: 'Destruya o identifique entradas de registro como faltantes' },\r\n    { title: 'Evidencia de evento de destrucción de entrada de registro' },\r\n    { title: 'Desaprobar / retraer entradas de registro' },\r\n    { title: 'Evidencia de evento de desaprobación / retracción de entrada de registro' },\r\n    { title: 'Reactivar entradas de registro' },\r\n    { title: 'Evidencia de evento de reactivación de registro de entrada' },\r\n    { title: 'Fusionar entradas de registro' },\r\n    { title: 'Evidencia de evento de combinación de entrada de registro' },\r\n    { title: 'Desunir entradas de registro' },\r\n    { title: 'Evidencia de entrada de registro Evento de fusión' },\r\n    { title: 'Entradas de registro de enlace' },\r\n    { title: 'Evidencia de evento de enlace de entrada de registro' },\r\n    { title: 'Desvincular entradas de registro' },\r\n    { title: 'Evidencia de entrada de registro Desvincular evento' },\r\n    { title: 'Colocar registros en espera legal' },\r\n    { title: 'Prueba de entrada de registro Evento de retención legal' },\r\n    { title: 'Liberar entradas de registro de retención legal' },\r\n    { title: 'Eliminar la retención legal en el desencadenador de auditoría de entrada de registro' },\r\n\r\n    //250 Funcionalidades \r\n\r\n    { title: 'Vida útil récord' },\r\n    { title: 'Administrar entradas de registro' },\r\n    { title: 'Gestionar entradas de registros para retención legal' },\r\n    { title: 'Estados de registro' },\r\n    { title: 'Administrar estado pendiente de registro' },\r\n    { title: 'Gestionar entrada de registro Estado modificado, corregido y aumentado' },\r\n    { title: 'Gestionar la sucesión de entradas de registros y el control de versiones' },\r\n    { title: 'Gestionar retracción de entrada de registro' },\r\n    { title: 'Completar registro' },\r\n    { title: 'Grabar Sincronización' },\r\n    { title: 'Grabar Archivo y Restaurar' },\r\n    { title: 'Seguridad' },\r\n    { title: 'Autenticación de entidad' },\r\n    { title: 'Autorización de entidad' },\r\n    { title: 'Control de acceso a la entidad' },\r\n    { title: 'Control de acceso de eemergencia' },\r\n    { title: 'Control de acceso de pacientes' },\r\n    { title: 'No repudio' },\r\n    { title: 'Intercambio seguro de datos' },\r\n    { title: 'Enrutamiento seguro de datos' },\r\n    { title: 'Privacidad y confidencialidad del paciente' },\r\n    { title: 'Redacte la información de identificación del paciente' },\r\n    { title: 'Proteger la identidad del paciente individual' },\r\n    { title: 'Mediciones de operación del sistema' },\r\n    { title: 'Servicio disponible' },\r\n    { title: 'Entorno de intercambio de información confiable' },\r\n    { title: 'Auditoría' },\r\n    { title: 'Disparadores de auditoría' },\r\n    { title: 'Disparadores de auditoría de registro de entrada' },\r\n    { title: 'Disparadores de auditoría de seguridad' },\r\n    { title: 'Activador de auditoría de seguridad de eventos de seguridad' },\r\n    { title: 'Autenticación de usuario en el sistema (Iniciar sesión de usuario) Disparador de auditoría de seguridad' },\r\n    { title: 'Autenticación de usuario (solicitud del sistema para cambio de contraseña) Disparador de auditoría de seguridad' },\r\n    { title: 'Solicitud de usuario para cambiar el desencadenador de auditoría de seguridad de contraseña' },\r\n    { title: 'Cierre de sesión de usuario (sesión de usuario final) Disparador de auditoría de seguridad' },\r\n    { title: 'Disparador de auditoría de seguridad de acceso de usuario (correcto)' },\r\n    { title: 'Intentos del usuario para acceder a los datos (sin éxito: acceso denegado) Disparador de auditoría de seguridad' },\r\n    { title: 'Disparador de auditoría de seguridad de acceso de usuario extraordinario (Break the Glass)' },\r\n    { title: 'Activación de auditoría de seguridad de permisos de usuario (autorización)' },\r\n    { title: 'Disparadores de auditoría del sistema' },\r\n    { title: 'Sistema Evento Disparador de auditoría del sistema' },\r\n    { title: 'Sistema iniciado Disparador de auditoría del sistema' },\r\n    { title: 'Copia de seguridad del iniciador de auditoría del sistema iniciado' },\r\n    { title: 'Copia de seguridad del disparador de auditoría del sistema completado' },\r\n    { title: 'Disparo de auditoría de sistema iniciado de recuperación de copia de seguridad' },\r\n    { title: 'Activación de la auditoría del sistema de recuperación de copia de seguridad completada' },\r\n    { title: 'Disparo de auditoría de sistema iniciado por trabajo por lotes' },\r\n    { title: 'Disparo de auditoría de sistema de trabajo completado por lotes' },\r\n    { title: 'Mantenimiento iniciado disparador de auditoría del sistema' },\r\n    { title: 'Mantenimiento completo del disparador de auditoría del sistema' },\r\n\r\n    //300 Funcionalidades\r\n\r\n    { title: 'Disparador de auditoría del sistema de uso de recursos' },\r\n    { title: 'Eventos de mantenimiento del sistema - Disparador de auditoría del sistema de acceso local' },\r\n    { title: 'Eventos de mantenimiento del sistema: disparador de auditoría del sistema de acceso remoto' },\r\n    { title: 'Mantenimiento del sistema - EHR o disparador de auditoría del sistema de software clínico' },\r\n    { title: 'Mantenimiento del sistema - Códigos, vocabulario, conocimiento, reglas Disparador de auditoría del sistema' },\r\n    { title: 'Disparador de auditoría del sistema de corrupción de datos' },\r\n    { title: 'Disparadores de auditoría clínica' },\r\n    { title: 'Alertas clínicas Disparador de auditoría clínica' },\r\n    { title: 'Agradecimientos de cambios clínicamente significativos en el informe Disparador de auditoría clínica' },\r\n    { title: 'Desactivar alertas de soporte de decisiones Disparador de auditoría clínica' },\r\n    { title: 'Gestión de registro de auditoría' },\r\n    { title: 'Registro de Auditoría Indelebilidad' },\r\n    { title: 'Notificación de auditoría y revisión' },\r\n    { title: 'Servicios de registro y directorio' },\r\n    { title: 'Terminología estándar y servicios terminológicos' },\r\n    { title: 'Terminología estándar y modelos terminológicos' },\r\n    { title: 'Mantenimiento y versiones de terminologías estándar' },\r\n    { title: 'Mapeo de terminología' },\r\n    { title: 'Interoperabilidad basada en estándares' },\r\n    { title: 'Aplicación y estándares de intercambio de documentos estructurados' },\r\n    { title: 'Normas de intercambio de aplicaciones' },\r\n    { title: 'Estándares de intercambio de documentos estructurados' },\r\n    { title: 'Versiones y mantenimiento de estándares de intercambio' },\r\n    { title: 'Integración de aplicaciones basadas en estándares' },\r\n    { title: 'Acuerdos de intercambio' },\r\n    { title: 'Integración de sistema' },\r\n    { title: 'Gestión de normas comerciales' },\r\n    { title: 'Gestión de flujo de trabajo' },\r\n    { title: 'Copia de seguridad y recuperación de bases de datos' },\r\n    { title: 'Operaciones de gestión del sistema y rendimiento' },\r\n\r\n\r\n    //330 Funcionales \r\n\r\n];\r\n\r\n\r\nexport default FormularioModal\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Button from '@material-ui/core/Button'\r\nimport FormularioModal from './FrmGuardarFuncionalidad.js'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  fab: {\r\n\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(3),\r\n\r\n\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(4, 4, 4),\r\n    justifyContent: 'center'\r\n  },\r\n}));\r\n\r\nexport default function SimpleModal(props) {\r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n\r\n    <div>\r\n\r\n      <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handleOpen}>\r\n        <AddIcon />\r\n      </Fab>\r\n\r\n      <Modal align=\"center\"\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <h2 id=\"simple-modal-title\">Funcionalidades !!</h2>\r\n\r\n\r\n\r\n          <FormularioModal handleClose={handleClose} setCurrentProject={props.setCurrentProject} CurrentProject={props.CurrentProject} refreshList={props.refreshList} user={props.user}/>\r\n\r\n        </div>\r\n      </Modal>\r\n\r\n    </div>\r\n\r\n  );\r\n}","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ModalFuncionalidad from './ModalFuncionalidad.js';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Button from '@material-ui/core/Button'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nvar firebase = require(\"firebase/app\");\r\n// Add the Firebase products that you want to use\r\nrequire(\"firebase/firestore\");\r\n\r\n\r\nconst useStyles = {\r\n  root: {\r\n    width: '100%',\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n  button: {\r\n    margin: '10px'\r\n  }\r\n};\r\n\r\nclass VistaFuncionalidad extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      rows: [],\r\n\r\n    }\r\n  }\r\n  // function createData(nombreFunc, propiedad,) {\r\n  //   return { nombreFunc, propiedad,};\r\n  // }\r\n  // clearform() {\r\n  //   this.setState({ funcionalidad: [] })\r\n  // }\r\n\r\n  //leer datos \r\n  getData() {\r\n\r\n    var db = firebase.firestore();\r\n\r\n    let ListRef=db.collection(\"ListColections\").doc(this.props.CurrentProject.nameProject);\r\n    let getDoc=ListRef.get()\r\n      .then(doc => {\r\n        let dRaw=doc.data()\r\n        this.setState({ rows: dRaw.Funcionalidades })\r\n    })\r\n\r\n      .catch((err) => {\r\n        console.log('error de message', err);\r\n      });\r\n\r\n    // this.clearform()\r\n  }\r\n\r\n\r\n\r\n\r\n   delete(funcion){\r\n\r\n    var db=firebase.firestore();\r\n    var  CurrentProject = this.props.CurrentProject\r\n    var nFuncionalidades=CurrentProject.Funcionalidades.map(fn=>{\r\n      if (fn.funcionalidad==funcion){\r\n        fn.status=\"deleted\"\r\n        fn.deletedby=this.props.user\r\n      }\r\n      return fn\r\n    })\r\n    var docRef = db.collection(\"ListColections\").doc(this.props.CurrentProject.nameProject);\r\n        \r\n    var setAda = docRef.update({\"Funcionalidades\":nFuncionalidades});\r\n      \r\n  this.getData();\r\n\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.getData()\r\n  }\r\n\r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div>\r\n       <Typography variant=\"h6\">Funcionalidades del proyecto: {this.props.CurrentProject.nameProject} </Typography>\r\n        <br />\r\n        <br /> \r\n\r\n        <Grid container xs={24}  >\r\n          <Paper className={classes.root}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n\r\n                  <TableCell align={'center'}><Typography variant=\"h8\">Nombre Funcionalidad</Typography></TableCell>\r\n                  <TableCell align={'center'}><Typography variant=\"h8\">Colaborador</Typography></TableCell>\r\n                  <TableCell align={'center'}><Typography variant=\"h8\">Estado</Typography></TableCell>\r\n                  <TableCell align={'center'}><Typography variant=\"h8\">Eliminar</Typography></TableCell>\r\n                  {/* <TableCell align=\"right\">Tipo de Dato</TableCell> */}\r\n\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n              {/* {this.state.rows.Funcionalidad.map */}\r\n                {this.state.rows.length>1?this.state.rows.map(fn => (\r\n                  <TableRow >\r\n                    <TableCell align={'center'} component=\"th\" scope=\"row\">\r\n                      {fn.funcionalidad}                      \r\n                    </TableCell>\r\n                    <TableCell align={'center'} component=\"th\" scope=\"row\">\r\n                      {fn.colaborador}                      \r\n                    </TableCell>\r\n                    <TableCell align={'center'} component=\"th\" scope=\"row\">\r\n                      {fn.status +\" by \"+ (fn.status==\"deleted\"?fn.deletedby:fn.colaborador)}                      \r\n                    </TableCell>\r\n                    <TableCell align=\"center\" >  \r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      className={classes.button}\r\n                      startIcon={<DeleteIcon />}\r\n                     onClick={()=>this.delete(fn.funcionalidad)}\r\n                    />    \r\n\r\n                    </TableCell>\r\n\r\n\r\n                  </TableRow>\r\n                )):\"\"}\r\n\r\n              </TableBody>\r\n            </Table>\r\n\r\n          </Paper>\r\n        </Grid>\r\n        <br />\r\n\r\n        <Grid item container xs={12} alignItems=\"flex-end\" direction=\"column\" placement=\"right-start\">\r\n          <Grid item>\r\n            <ModalFuncionalidad setCurrentProject ={this.props.setCurrentProject} CurrentProject = {this.props.CurrentProject} refreshList={this.getData.bind(this)} user={this.props.user} />\r\n          </Grid>\r\n\r\n        </Grid>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(useStyles)(VistaFuncionalidad);\r\n","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nvar firebase = require(\"firebase/app\");\r\n// Add the Firebase products that you want to use\r\nrequire(\"firebase/firestore\");\r\n\r\n\r\nclass FormularioVarModal extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            variable: [],\r\n\r\n\r\n\r\n\r\n        }\r\n    }\r\n    handleValue = (e, key) => {\r\n        this.setState({ [key]: e.target.textContent })\r\n    }\r\n    clearform() {\r\n        this.setState({ variable: [] })\r\n    }\r\n    SendValue() {\r\n\r\n\r\n        var CurrentProject = this.props.CurrentProject\r\n\r\n        if (CurrentProject[\"Variable\"] == undefined)\r\n            // aqui se crea el estado para colaborador y el estado de creado \r\n            CurrentProject[\"Variable\"] = [{colaborador:this.props.user,variable:this.state.variable,status:\"created\"}]\r\n        else\r\n            CurrentProject[\"Variable\"].push({colaborador:this.props.user,variable:this.state.variable,status:\"created\"})\r\n\r\n        this.props.setCurrentProject(CurrentProject)\r\n        var db = firebase.firestore();\r\n\r\n        //console.log(\"nombre_project\", this.props.CurrentProject.nameProject);\r\n        var docRef = db.collection(\"ListColections\").doc(this.props.CurrentProject.nameProject);\r\n\r\n        var setAda = docRef.update({ \"Variables\": CurrentProject[\"Variable\"] });\r\n\r\n        this.props.handleClose()\r\n        this.props.refreshList()\r\n        this.clearform()\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <Grid container={24} justify=\"center\">\r\n                <div>\r\n\r\n\r\n                    <Autocomplete value={this.state.variable} onChange={(e) => this.handleValue(e, \"variable\")}\r\n                        freeSolo\r\n                        disableClearable\r\n                        options={VarVIH.map(option => option.title)}\r\n                        style={{ width: 300 }}\r\n                        renderInput={params => (\r\n                            <TextField\r\n                                {...params}\r\n                                label=\"Variable\"\r\n                                InputProps={{ ...params.InputProps, type: 'search' }}\r\n                                fullWidth />\r\n                        )}\r\n                    />\r\n                    <br />\r\n                    <br />\r\n                    {/* <TextField value={this.state.descripcion} onChange={(e)=>this.handleValue(e,\"descripcion\")} fullWidth={true} label={\"Descripcion\"}multiline/>\r\n            <TextField value={this.state.linea} onChange={(e)=>this.handleValue(e,\"linea\")} fullWidth={true} label={\"Linea\"} />\r\n            <TextField value={this.state.author} onChange={(e)=>this.handleValue(e,\"author\")} fullWidth={true} label={\"Author\"} />*/}\r\n                    <Button onClick={() => this.SendValue()} style={{ marginTop: 10 }} variant=\"contained\" color=\"primary\"> Guardar</Button>\r\n                </div>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nconst VarVIH = [\r\n\r\n    { title: 'Documento' },\r\n    { title: 'Nombre' },\r\n    { title: 'Apellido' },\r\n    { title: 'Tipo de documento' },\r\n    { title: 'Fecha de nacimiento' },\r\n    { title: 'Edad actual' },\r\n    { title: 'Estado civil' },\r\n    { title: 'Ocupación' },\r\n    { title: 'Municipio de residencia' },\r\n    { title: 'Teléfono' },\r\n    { title: 'Nivel de estudio' },\r\n    { title: 'Resguardo' },\r\n    { title: 'Grupo étnico' },\r\n    { title: 'Enfermedades actuales infecciosas' },\r\n    { title: 'Código del prestador de servicios de salud' },\r\n    { title: 'Número del NIT, cédula o pasaporte con el cual se identifique el prestador de servicios de salud para el cobro de los servicios' },\r\n    { title: 'Código entidad administradora' },\r\n    { title: 'Sexo' },\r\n    { title: 'Código de consulta' },\r\n    { title: 'Finalidad de la consulta' },\r\n    { title: 'Código del diagnóstico principal' },\r\n    { title: 'Código del diagnóstico relacionado No. 1' },\r\n    { title: 'Código del diagnóstico relacionado No. 2' },\r\n    { title: 'Código del diagnóstico relacionado No. 3' },\r\n    { title: 'Tipo de diagnóstico principal' },\r\n    { title: 'Fecha del procedimiento' },\r\n    { title: 'Código del procedimiento' },\r\n    { title: 'Finalidad del procedimiento' },\r\n    { title: 'Ámbito de realización del procedimiento' },\r\n    { title: 'Diagnóstico principal' },\r\n    { title: 'Diagnóstico a la salida{' },\r\n    { title: 'Fecha de ingreso del usuario a observación' },\r\n    { title: 'Diagnóstico relacionado' },\r\n    { title: 'Estado de salida' },\r\n    { title: 'Causa básica de muerte en urgencias' },\r\n    { title: 'Fecha de la salida del usuario en observación' },\r\n    { title: 'Hora de la salida del usuario en observación' },\r\n    { title: 'Número de la factura' },\r\n    { title: 'Vía de ingreso a la institución' },\r\n    { title: 'Diagnóstico principal de egreso' },\r\n    { title: 'Diagnóstico de la complicación' },\r\n    { title: 'Estado a la salida' },\r\n    { title: 'Fecha de egreso del usuario a la institución' },\r\n    { title: 'Hora de egreso del usuario de la institución' },\r\n    { title: 'Tipo de identificación de la madre' },\r\n    { title: 'Número de identificación de la madre en el Sistema' },\r\n    { title: 'Fecha de nacimiento del recién nacido' },\r\n    { title: 'Hora de nacimiento' },\r\n    { title: 'Número de autorización' },\r\n    { title: 'Código del medicamento' },\r\n    { title: 'Tipo de medicamento' },\r\n    { title: 'Nombre genérico del medicamento' },\r\n    { title: 'Forma farmacéutica' },\r\n    { title: 'Concentración del medicamento' },\r\n    { title: 'Unidad de medida del medicamento' },\r\n    { title: 'Número de unidades' },\r\n    { title: 'Valor unitario de medicamento' },\r\n    { title: 'Valor total de medicamento' },\r\n    { title: 'Número de la factura' },\r\n    { title: 'Número de autorización' },\r\n    { title: 'Valor procedimiento' },\r\n    { title: 'Valor total' },\r\n    { title: 'Cantidad' },\r\n    { title: 'Fecha de la remisión para el envío de los datos' },\r\n    { title: 'Lugar Donde Ocurrió la defunción' },\r\n    { title: 'Área donde ocurrió la defunción' },\r\n    { title: 'Tipo de defunción' },\r\n    { title: 'Fecha en que ocurrió la defunción' },\r\n    { title: 'Muerte sin certificación médica' },\r\n    { title: 'Hora en que ocurrió la defunción' },\r\n    { title: 'Sexo del fallecido' },\r\n    { title: 'Probable manera de muerte' },\r\n    { title: 'Nombre y apellidos de quien certifica' },\r\n    { title: 'Tipo de documento de identificación de quien certifica' },\r\n    { title: 'Número de documento de identidad de quien certifica' },\r\n    { title: 'Profesión de quien certifica' },\r\n    { title: 'Registro profesional' },\r\n    { title: 'Lugar y fecha de expedición del certificado' },\r\n    { title: 'Sitio donde ocurrió la defunción' },\r\n    { title: 'Institución de salud' },\r\n    { title: 'Sexo del fallecido' },\r\n    { title: 'último año de estudio que aprobó el fallecido' },\r\n    { title: 'La ocupación pudo ser causa o estar asociada con la defunción' },\r\n    { title: 'De acuerdo con la cultura, pueblo, rasgo físico, el fallecido era o se reconocía como' },\r\n    { title: 'Régimen de Seguridad social' },\r\n    { title: 'Área de residencia habitual del fallecido' },\r\n    { title: 'Entidad Administradora de salud a la que pertenece el fallecido' },\r\n    { title: 'Muertes violentas' },\r\n    { title: 'Tipo de registro' },\r\n    { title: 'Código de la EPS o de la Dirección Territorial de Salud' },\r\n    { title: 'Fecha inicial del período de la información reportada' },\r\n    { title: 'Fecha final del período de la información reportada' },\r\n    { title: 'Número total de registros de detalle contenidos en el archivo' },\r\n    { title: 'Datos de identificación' },\r\n    { title: 'Identificación del riesgo' },\r\n    { title: 'Actividades de intervención según el riesgo' },\r\n\r\n];\r\n\r\nconst varMatSegura = [\r\n    { title: 'Documento' },\r\n    { title: 'Nombre' },\r\n    { title: 'Apellido' },\r\n    { title: 'Tipo de documento' },\r\n    { title: 'Fecha de nacimiento ' },\r\n    { title: 'Edad actual' },\r\n    { title: 'Estado civil ' },\r\n    { title: 'Ocupación' },\r\n    { title: 'Municipio de residencia' },\r\n    { title: 'Teléfono' },\r\n    { title: 'Nivel de estudio' },\r\n    { title: 'Resguardo' },\r\n    { title: 'Grupo étnico' },\r\n    { title: 'Fecha Consulta Primera Vez' },\r\n    { title: 'Semanas de gestación al ingreso' },\r\n    { title: 'Fecha de registro de peso y/o talla pre gestacional o I trimestral de gestación' },\r\n    { title: 'Semanas de gestación II trimestre' },\r\n    { title: 'Semanas de gestación III trimestre' },\r\n    { title: 'Edad gestacional Hemoglobina' },\r\n    { title: 'Trimestre de gestación a la toma examen' },\r\n    { title: 'Edad gestacional grupo sanguíneo' },\r\n    { title: 'Edad gestacional glicemia' },\r\n    { title: 'Edad gestacional ingreso' },\r\n    { title: 'Edad gestacional urocultivo' },\r\n    { title: 'Fecha de asesoría lactancia materna' },\r\n    { title: 'Fecha de remisión al ginecólogo' },\r\n    { title: 'Fecha última cita ginecólogo' },\r\n    { title: 'Fecha asesoría de anticoncepción ' },\r\n    { title: 'Semanas de gestación a la consulta odontológica' },\r\n    { title: 'Institución donde se atendió el parto o lugar específico del parto si aplica ' },\r\n    { title: 'Profesional o persona que atiende el parto ' },\r\n    { title: 'Nivel de complejidad de la atención de la institución que atendió el parto ' },\r\n    { title: 'Acompañamiento por persona de confianza durante trabajo de parto ' },\r\n    { title: 'Complicaciones postparto ' },\r\n    { title: 'Peso al nacer por edad gestacional ' },\r\n    { title: 'Fecha toma TSH' },\r\n    { title: 'Resultado TSH' },\r\n    { title: 'Fecha resultado TSH' },\r\n    { title: 'Fecha aplicación vacuna hepatitis B2' },\r\n    { title: 'Fecha aplicación vacuna BCG' },\r\n    { title: 'Fecha toma TSH 2' },\r\n    { title: 'Resultado TSH 2' },\r\n    { title: 'Fecha aplicación vacuna BCG 2' },\r\n    { title: 'Fecha último seguimiento' },\r\n    { title: 'Número seguimientos teléfonos' },\r\n    { title: 'Observación seguimiento teléfono' },\r\n    { title: 'Fecha seguimiento por personal de salud en terreno en puerperio' },\r\n    { title: 'Hallazgos acompañamiento personal de salud recién nacido' },\r\n    { title: 'Inicio de lactancia materna' },\r\n    { title: 'durante el contacto piel a piel' },\r\n    { title: 'Otro Diagnostico Morbilidad Materna O Condición De Riesgo' },\r\n\r\n    { title: 'Peso al nacer por edad gestacional' },\r\n    { title: 'Hallazgo gestación seguimiento por visita domiciliaria ' },\r\n    { title: 'Fecha identificación Gestante ' },\r\n    { title: 'Enfermedades actuales infecciosas ' },\r\n    { title: 'Código del prestador de servicios de salud ' },\r\n    { title: 'Número del NIT, cédula o pasaporte con el cual se identifique el prestador de servicios de salud para el cobro de los servicios ' },\r\n    { title: 'Código entidad administradora' },\r\n    { title: 'Sexo' },\r\n    { title: 'Código de consulta ' },\r\n    { title: 'Finalidad de la consulta ' },\r\n    { title: 'Código del diagnóstico principal ' },\r\n    { title: 'Código del diagnóstico relacionado No. 1' },\r\n    { title: 'Código del diagnóstico relacionado No. 2 ' },\r\n    { title: 'Código del diagnóstico relacionado No. 3 ' },\r\n    { title: 'Tipo de diagnóstico principal' },\r\n    { title: 'Fecha del procedimiento ' },\r\n    { title: 'Código del procedimiento ' },\r\n    { title: 'Finalidad del procedimiento ' },\r\n    { title: 'Ámbito de realización del procedimiento ' },\r\n    { title: 'Diagnóstico principal ' },\r\n    { title: 'Diagnóstico relacionado ' },\r\n    { title: 'Fecha de ingreso del usuario a observación ' },\r\n    { title: 'Diagnóstico a la salida ' },\r\n    { title: 'Estado de salida ' },\r\n    { title: 'Causa básica de muerte en urgencias ' },\r\n    { title: 'Fecha de la salida del usuario en observación ' },\r\n    { title: 'Hora de la salida del usuario en observación ' },\r\n    { title: 'Número de la factura ' },\r\n    { title: 'Vía de ingreso a la institución ' },\r\n    { title: 'diagnóstico principal de egreso ' },\r\n    { title: 'Diagnóstico de la complicación ' },\r\n    { title: 'Estado a la salida ' },\r\n    { title: 'Fecha de egreso del usuario a la institución ' },\r\n    { title: 'Hora de egreso del usuario de la institución ' },\r\n    { title: 'Tipo de identificación de la madre ' },\r\n    { title: 'Número de identificación de la madre en el Sistema ' },\r\n    { title: 'Fecha de nacimiento del recién nacido ' },\r\n    { title: 'Hora de nacimiento ' },\r\n    { title: 'Número de autorización ' },\r\n    { title: 'Código del medicamento ' },\r\n    { title: 'Tipo de medicamento ' },\r\n    { title: 'Nombre genérico del medicamento ' },\r\n    { title: 'Forma farmacéutica ' },\r\n    { title: 'Concentración del medicamento ' },\r\n    { title: 'Unidad de medida del medicamento ' },\r\n    { title: 'Número de unidades ' },\r\n    { title: 'Valor unitario de medicamento' },\r\n    { title: 'Valor total de medicamento' },\r\n    { title: 'Número de la factura' },\r\n    { title: 'Número de autorización' },\r\n    { title: 'Valor procedimiento' },\r\n    { title: 'Valor total' },\r\n    { title: 'Cantidad' },\r\n    { title: 'Fecha de la remisión para el envío de los datos' },\r\n    { title: 'Nombre y apellidos de la madre - defunción fetal' },\r\n    { title: 'Tipo de documento de identificación de la madre - defuncion fetal' },\r\n    { title: 'Edad de la madre' },\r\n    { title: 'Número de hijos vivos y nacidos muertos de la madres' },\r\n    { title: 'Defunción de mujeres en edad fértil' },\r\n    { title: 'Muerte sin certificación médica' },\r\n    { title: 'Lugar Donde Ocurrió la defunción' },\r\n    { title: 'Área donde ocurrió la defunción' },\r\n    { title: 'Tipo de defunción' },\r\n    { title: 'Fecha en que ocurrió la defunción' },\r\n    { title: 'Hora en que ocurrió la defunción' },\r\n    { title: 'Sexo del fallecido' },\r\n    { title: 'Probable manera de muerte' },\r\n    { title: 'Nombre y apellidos de quien certifica' },\r\n    { title: 'Tipo de documento de identificación de quien certifica' },\r\n    { title: 'Número de documento de identidad de quien certifica' },\r\n    { title: 'Profesión de quien certifica' },\r\n    { title: 'Registro profesional' },\r\n    { title: 'Lugar y fecha de expedición del certificado' },\r\n    { title: 'Sitio donde ocurrió la defunción' },\r\n    { title: 'Institución de salud' },\r\n    { title: 'Sexo del fallecido' },\r\n    { title: 'último año de estudio que aprobó el fallecido' },\r\n    { title: 'La ocupación pudo ser causa o estar asociada con la defunción' },\r\n    { title: 'De acuerdo con la cultura,  pueblo, rasgo físico, el fallecido era o se reconocía como ' },\r\n    { title: 'Régimen de Seguridad social' },\r\n    { title: 'Área de residencia habitual del fallecido' },\r\n    { title: 'Entidad Administradora de salud a la que pertenece el fallecido' },\r\n    { title: 'Muertes violentas' },\r\n    { title: 'Tipo de registro' },\r\n    { title: 'Código de la EPS o de la  Dirección Territorial de Salud' },\r\n    { title: 'Fecha inicial del período de la información reportada' },\r\n    { title: 'Fecha final del período de la información reportada' },\r\n    { title: 'Número total de registros de detalle contenidos en el archivo' },\r\n    { title: 'Datos de identificación' },\r\n    { title: 'Identificación del riesgo' },\r\n    { title: 'Actividades de intervención según el riesgo' },\r\n\r\n\r\n];\r\n\r\nexport default FormularioVarModal\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Button from '@material-ui/core/Button'\r\nimport FormularioVarModal from './FormularioVarModal.js'\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  fab: {\r\n\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(3),\r\n\r\n\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nexport default function SimpleModal(props) {\r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handleOpen}>\r\n        <AddIcon />\r\n      </Fab>\r\n      <Modal align=\"center\"\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <h2 id=\"simple-modal-title\">Variables !!</h2>\r\n          <p id=\"simple-modal-description\">\r\n            <FormularioVarModal handleClose={handleClose} setCurrentProject={props.setCurrentProject} CurrentProject={props.CurrentProject} refreshList={props.refreshList} user={props.user} />\r\n          </p>\r\n\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ModalVariables from './ModalVariables.js';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Button from '@material-ui/core/Button'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\nvar firebase = require(\"firebase/app\");\r\n// Add the Firebase products that you want to use\r\nrequire(\"firebase/firestore\");\r\n\r\nconst useStyles = {\r\n  root: {\r\n    width: '100%',\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n  button: {\r\n    margin: '10px'\r\n  }\r\n};\r\n\r\nclass VistaVariables extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      rows: [],\r\n\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // createData(nombreVar, propiedad, tipoDato) {\r\n  //   return { nombreVar, propiedad, tipoDato };\r\n  // }\r\n  // clearform() {\r\n  //   this.setState({ variable: [] })\r\n  // }\r\n\r\n\r\n  getData() {\r\n\r\n    var db = firebase.firestore();\r\n    let ListRef = db.collection(\"ListColections\").doc(this.props.CurrentProject.nameProject);\r\n    let getDoc = ListRef.get()\r\n      .then(doc => {\r\n        let dRaw = doc.data()\r\n        this.setState({ rows: dRaw.Variables })\r\n      })\r\n\r\n      .catch((err) => {\r\n        console.log('error de message', err);\r\n      });\r\n\r\n    // this.clearform()\r\n  }\r\n\r\n\r\n  delete(funcion){\r\n\r\n    var db=firebase.firestore();\r\n    var  CurrentProject = this.props.CurrentProject\r\n    var nVariables=CurrentProject.Variables.map(vr=>{\r\n      if (vr.variable==funcion){\r\n        vr.status=\"deleted\"\r\n        vr.deletedby=this.props.user\r\n      }\r\n      return vr\r\n    })\r\n    var docRef = db.collection(\"ListColections\").doc(this.props.CurrentProject.nameProject);\r\n        \r\n    var setAda = docRef.update({\"Variables\":nVariables});\r\n      \r\n  this.getData();\r\n\r\n  }\r\n  \r\n\r\n  componentDidMount() {\r\n    this.getData()\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <Typography variant=\"h6\">Variables del proyecto: {this.props.CurrentProject.nameProject} </Typography>\r\n        <br />\r\n        <br />\r\n\r\n        <Grid container xs={24}  >\r\n          <Paper className={classes.root}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align={'center'}><Typography variant=\"h8\">Nombre Variable</Typography></TableCell>\r\n                  <TableCell align={'center'}><Typography variant=\"h8\">Colaborador</Typography></TableCell>\r\n                  <TableCell align={'center'}><Typography variant=\"h8\">Estado</Typography></TableCell>\r\n                  <TableCell align={'center'}><Typography variant=\"h8\">Eliminar</Typography></TableCell>\r\n                  {/* <TableCell align=\"right\">Propiedad</TableCell>\r\n          <TableCell align=\"right\">Tipo de Dato</TableCell> */}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {this.state.rows.length>=1?this.state.rows.map(vr => (\r\n                  <TableRow >\r\n                    <TableCell align={'center'} component=\"th\" scope=\"row\">\r\n                      {vr.variable}\r\n                    </TableCell>\r\n                    <TableCell align={'center'} component=\"th\" scope=\"row\">\r\n                      {vr.colaborador}\r\n                    </TableCell>\r\n                    <TableCell align={'center'} component=\"th\" scope=\"row\">\r\n                      {vr.status +\" by \"+ (vr.status==\"deleted\"?vr.deletedby:vr.colaborador)}                      \r\n                    </TableCell>\r\n                    <TableCell align=\"center\" >  \r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      className={classes.button}\r\n                      startIcon={<DeleteIcon />}\r\n                    onClick={()=>this.delete(vr.variable)}\r\n                    />\r\n\r\n                    \r\n                    </TableCell>\r\n                  </TableRow>\r\n                )) : \"\"}\r\n\r\n              </TableBody>\r\n            </Table>\r\n\r\n          </Paper>\r\n        </Grid>\r\n        <br />\r\n\r\n        <Grid item container xs={12} alignItems=\"flex-end\" direction=\"column\" placement=\"right-start\">\r\n          <Grid item>\r\n            <ModalVariables setCurrentProject={this.props.setCurrentProject} CurrentProject={this.props.CurrentProject} refreshList={this.getData.bind(this)} user={this.props.user}/>\r\n          </Grid>\r\n\r\n        </Grid>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default withStyles(useStyles)(VistaVariables);","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nvar firebase = require(\"firebase/app\");\r\n// Add the Firebase products that you want to use\r\nrequire(\"firebase/firestore\");\r\n\r\n\r\nconst respon = [\r\n    { title: 'Hospital Toribio Maya ' },\r\n    { title: 'Hospital Susana Lopez de Valencia' },\r\n    { title: 'Hospital Universitario de Popayán (San José)' },\r\n    { title: 'Clinica la Estancía' },\r\n    { title: 'Clinica Santa Gracia' },\r\n\r\n];\r\n\r\n\r\n\r\nclass FormularioResModal extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n            responsable: [],\r\n\r\n\r\n        }\r\n    }\r\n    handleValue = (e, key) => {\r\n        this.setState({ [key]: e.target.textContent })\r\n    }\r\n    clearform() {\r\n        this.setState({ Responsable: [] })\r\n    }\r\n    SendValue() {\r\n        var CurrentProject = this.props.CurrentProject\r\n\r\n        if (CurrentProject[\"Responsable\"] == undefined)\r\n            CurrentProject[\"Responsable\"] = [{ colaborador:this.props.user,responsable:this.state.responsable,status:\"created\"}]\r\n        else\r\n            CurrentProject[\"Responsable\"].push({colaborador:this.props.user,responsable:this.state.responsable,status:\"created\"})\r\n\r\n\r\n        this.props.setCurrentProject(CurrentProject)\r\n        var db = firebase.firestore();\r\n\r\n        var docRef = db.collection(\"ListColections\").doc(this.props.CurrentProject.nameProject);\r\n\r\n        var setAda = docRef.update({ \"Responsables\": CurrentProject[\"Responsable\"] });\r\n\r\n        this.props.handleClose()\r\n        this.props.refreshList()\r\n        this.clearform()\r\n\r\n\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <Grid container={24} justify=\"center\" >\r\n                <div>\r\n                    {/* <TextField value={this.state.responsable1} onChange={(e)=>this.handleValue(e,\"responsable1\")} fullWidth={true} label={\"Responsable 1\"}/>\r\n            <TextField value={this.state.descripcion} onChange={(e)=>this.handleValue(e,\"descripcion\")} fullWidth={true} label={\"Descripcion\"}multiline/> *\r\n            <TextField value={this.state.linea} onChange={(e)=>this.handleValue(e,\"linea\")} fullWidth={true} label={\"Linea\"} />\r\n            <TextField value={this.state.author} onChange={(e)=>this.handleValue(e,\"author\")} fullWidth={true} label={\"Author\"} />*/}\r\n                    <Autocomplete value={this.state.responsable} onChange={(e) => this.handleValue(e, \"responsable\")}\r\n                        freeSolo\r\n                        disableClearable\r\n                        options={respon.map(option => option.title)}\r\n                        style={{ width: 300 }}\r\n                        renderInput={params => (\r\n                            <TextField\r\n                                {...params}\r\n                                label=\"Responsables\"\r\n                                InputProps={{ ...params.InputProps, type: 'search' }}\r\n                                fullWidth />\r\n                        )}\r\n                    />\r\n                    <br />\r\n                    <br />\r\n\r\n                    <Button onClick={() => this.SendValue()} style={{ marginTop: 10 }} variant=\"contained\" color=\"primary\"> Guardar</Button>\r\n                </div>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\nexport default FormularioResModal\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Button from '@material-ui/core/Button'\r\nimport FormularioResModal from './FormularioResModal.js'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  fab: {\r\n\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(3),\r\n\r\n\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    alingItems: 'center'\r\n  },\r\n}));\r\n\r\nexport default function SimpleModal(props) {\r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n\r\n\r\n    <div >\r\n\r\n      <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handleOpen}>\r\n        <AddIcon />\r\n      </Fab>\r\n\r\n      <Modal\r\n        align=\"center\"\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <h2 id=\"simple-modal-title\">Responsables !!</h2>\r\n          <p id=\"simple-modal-description\">\r\n\r\n            <FormularioResModal handleClose={handleClose} setCurrentProject={props.setCurrentProject} CurrentProject={props.CurrentProject} refreshList={props.refreshList} user={props.user} />\r\n\r\n\r\n          </p>\r\n\r\n        </div>\r\n      </Modal>\r\n\r\n    </div>\r\n\r\n  );\r\n}","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ModalResponsables from './ModalResponsables.js';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Button from '@material-ui/core/Button'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\nvar firebase = require(\"firebase/app\");\r\n// Add the Firebase products that you want to use\r\nrequire(\"firebase/firestore\");\r\n\r\nconst useStyles = {\r\n  root: {\r\n    width: '100%',\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n  button: {\r\n    margin: '10px'\r\n  }\r\n};\r\n\r\n\r\nclass VistaResponsables extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      rows: [],\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // function createData(nombreRes, propiedad, tipoDato) {\r\n  //   return { nombreRes, propiedad, tipoDato };\r\n  // }\r\n\r\n  // clearform() {\r\n  //   this.setState({ responsable: [] })\r\n  // }\r\n\r\n  getData() {\r\n\r\n    var db = firebase.firestore();\r\n    let ListRef = db.collection(\"ListColections\").doc(this.props.CurrentProject.nameProject);\r\n    let getDoc = ListRef.get()\r\n      .then(doc => {\r\n        let dRaw = doc.data()\r\n        this.setState({ rows: dRaw.Responsables })\r\n      })\r\n\r\n      .catch((err) => {\r\n        console.log('error de message', err);\r\n      });\r\n\r\n    // this.clearform()\r\n  }\r\n\r\n  delete(funcion){\r\n\r\n    var db=firebase.firestore();\r\n    var  CurrentProject = this.props.CurrentProject\r\n    var nResponsables=CurrentProject.Responsables.map(rp=>{\r\n      if (rp.responsable==funcion){\r\n        rp.status=\"deleted\"\r\n        rp.deletedby=this.props.user\r\n      }\r\n      return rp\r\n    })\r\n    var docRef = db.collection(\"ListColections\").doc(this.props.CurrentProject.nameProject);\r\n        \r\n    var setAda = docRef.update({\"Responsables\":nResponsables});\r\n      \r\n  this.getData();\r\n\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.getData()\r\n  }\r\n\r\n  render() {\r\n\r\n\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Typography variant=\"h6\">Responsables del proyecto: {this.props.CurrentProject.nameProject} </Typography>\r\n        <br />\r\n        <br />\r\n\r\n        <Grid container xs={24}  >\r\n          <Paper className={classes.root}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align={'center'}><Typography variant=\"h8\">Nombre Responsable</Typography></TableCell>\r\n                  <TableCell align={'center'}><Typography variant=\"h8\">Colaborador</Typography></TableCell>\r\n                  <TableCell align={'center'}><Typography variant=\"h8\">Estado</Typography></TableCell>\r\n                  <TableCell align={'center'}><Typography variant=\"h8\">Eliminar</Typography></TableCell>\r\n                  \r\n                  </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {this.state.rows.length>=1?this.state.rows.map(rp => (\r\n                  <TableRow >\r\n                    <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                      {rp.responsable}\r\n                    </TableCell>\r\n                    <TableCell align={'center'} component=\"th\" scope=\"row\">\r\n                      {rp.colaborador}                      \r\n                    </TableCell>\r\n                    <TableCell align={'center'} component=\"th\" scope=\"row\">\r\n                      {rp.status +\" by \"+ (rp.status==\"deleted\"?rp.deletedby:rp.colaborador)}                      \r\n                    </TableCell>\r\n                    <TableCell align=\"center\" >  \r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      className={classes.button}\r\n                      startIcon={<DeleteIcon />}\r\n                     onClick={()=>this.delete(rp.responsable)}\r\n                    />    \r\n\r\n                    </TableCell>\r\n\r\n                  </TableRow>\r\n                )) : \"\"}\r\n\r\n              </TableBody>\r\n            </Table>\r\n\r\n          </Paper>\r\n        </Grid>\r\n        <br />\r\n\r\n        <Grid item container xs={12} alignItems=\"flex-end\" direction=\"column\" placement=\"right-start\">\r\n          <Grid item>\r\n            <ModalResponsables setCurrentProject={this.props.setCurrentProject} CurrentProject={this.props.CurrentProject} refreshList={this.getData.bind(this)} user={this.props.user}/>\r\n          </Grid>\r\n\r\n        </Grid>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(VistaResponsables);","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nvar firebase = require(\"firebase/app\");\r\n// Add the Firebase products that you want to use\r\nrequire(\"firebase/firestore\");\r\n\r\nconst useStyles = {\r\n  root: {\r\n    width: '100%',\r\n    minWidth: 500,\r\n  },\r\n  button: {\r\n    margin: '10px'\r\n  }\r\n};\r\n\r\n\r\nclass ResumenPro extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      rows: [],\r\n\r\n    }\r\n  }\r\n\r\n  getData2() {\r\n      \r\n    var db = firebase.firestore();\r\n\r\n    let ListRef=db.collection(\"ListColections\").doc(this.props.CurrentProject.nameProject);\r\n    let getDoc=ListRef.get()\r\n      .then(doc => {\r\n        let dRaw=doc.data()\r\n        this.setState({ rows: dRaw.Funcionalidades })\r\n    })\r\n\r\n      .catch((err) => {\r\n        console.log('error de message', err);\r\n      });\r\n\r\n        \r\n  }\r\n\r\n  delete(funcion){\r\n\r\n    var db=firebase.firestore();\r\n    var  CurrentProject = this.props.CurrentProject\r\n    var nFuncionalidades=CurrentProject.Funcionalidades.map(fn=>{\r\n      if (fn.funcionalidad==funcion){\r\n        fn.status=\"deleted\"\r\n        fn.deletedby=this.props.user\r\n      }\r\n      return fn\r\n    })\r\n    var docRef = db.collection(\"ListColections\").doc(this.props.CurrentProject.nameProject);\r\n        \r\n    var setAda = docRef.update({\"Funcionalidades\":nFuncionalidades});\r\n      \r\n  this.getData2()\r\n\r\n  }\r\n\r\n  getData3(){\r\n  \r\n  var db = firebase.firestore();\r\n  let ListRef = db.collection(\"ListColections\").doc(this.props.CurrentProject.nameProject);\r\n  let getDoc = ListRef.get()\r\n    .then(doc => {\r\n      let dRaw = doc.data()\r\n      this.setState({ rows: dRaw.Variables })\r\n    })\r\n\r\n    .catch((err) => {\r\n      console.log('error de message', err);\r\n    });\r\n\r\n  }\r\n\r\n\r\n  delete(funcion){\r\n\r\n    var db=firebase.firestore();\r\n    var  CurrentProject = this.props.CurrentProject\r\n    var nVariables=CurrentProject.Variables.map(vr=>{\r\n      if (vr.variable==funcion){\r\n        vr.status=\"deleted\"\r\n        vr.deletedby=this.props.user\r\n      }\r\n      return vr\r\n    })\r\n    var docRef = db.collection(\"ListColections\").doc(this.props.CurrentProject.nameProject);\r\n        \r\n    var setAda = docRef.update({\"Variables\":nVariables});\r\n      \r\n  this.getData3();\r\n\r\n  }\r\n   \r\n\r\n  getData4() {\r\n\r\n    var db = firebase.firestore();\r\n    let ListRef = db.collection(\"ListColections\").doc(this.props.CurrentProject.nameProject);\r\n    let getDoc = ListRef.get()\r\n      .then(doc => {\r\n        let dRaw = doc.data()\r\n        this.setState({ rows: dRaw.Responsables })\r\n      })\r\n\r\n      .catch((err) => {\r\n        console.log('error de message', err);\r\n      });\r\n\r\n    \r\n  }\r\n\r\n  delete(funcion){\r\n\r\n    var db=firebase.firestore();\r\n    var  CurrentProject = this.props.CurrentProject\r\n    var nResponsables=CurrentProject.Responsables.map(rp=>{\r\n      if (rp.responsable==funcion){\r\n        rp.status=\"deleted\"\r\n        rp.deletedby=this.props.user\r\n      }\r\n      return rp\r\n    })\r\n    var docRef = db.collection(\"ListColections\").doc(this.props.CurrentProject.nameProject);\r\n        \r\n    var setAda = docRef.update({\"Responsables\":nResponsables});\r\n      \r\n  this.getData4();\r\n\r\n  }\r\n\r\n\r\n\r\n componentDidMount() {\r\n     this.getData2();\r\n     this.getData3();\r\n     this.getData4();\r\n   }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <br />\r\n        <br />\r\n        <ExpansionPanel>\r\n          <ExpansionPanelSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            aria-controls=\"panel1a-content\"\r\n            id=\"panel1a-header\"\r\n          >\r\n            <Typography variant=\"h6\">Resumen Proyecto: {this.props.CurrentProject.nameProject}</Typography><br/>\r\n           \r\n          \r\n          </ExpansionPanelSummary>\r\n\r\n          <ExpansionPanelDetails>\r\n\r\n            <Paper className={classes.root}>\r\n              <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell component=\"th\" scope=\"row\"><Typography variant=\"h6\">Datos Generales</Typography></TableCell>\r\n    \r\n                      </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  \r\n                    <TableRow >                                 \r\n                      <TableCell component=\"th\" scope=\"row\"><Typography variant=\"h8\">Descripcion: {this.props.CurrentProject.descripcion}</Typography></TableCell>\r\n                    </TableRow>\r\n                    \r\n                    <TableRow >\r\n                      <TableCell component=\"th\" scope=\"row\"><Typography variant=\"h8\">Linea: {this.props.CurrentProject.linea}</Typography></TableCell>\r\n                    </TableRow>\r\n                   \r\n                   <TableRow >\r\n                      <TableCell component=\"th\" scope=\"row\"><Typography variant=\"h8\">Foto: {this.props.CurrentProject.foto}</Typography></TableCell>\r\n                   </TableRow>\r\n                    \r\n                    <TableRow >\r\n                      <TableCell component=\"th\" scope=\"row\"><Typography variant=\"h8\">Autor: {this.props.CurrentProject.author}</Typography></TableCell>\r\n                    </TableRow>\r\n\r\n                    {/* <TableRow >\r\n                      <TableCell component=\"th\" scope=\"row\"><Typography variant=\"h8\">Funcionalidad: {this.props.CurrentProject.Funcionalidad [] }</Typography></TableCell>\r\n                    </TableRow> */}\r\n                </TableBody>\r\n              </Table>\r\n\r\n            </Paper>\r\n\r\n          </ExpansionPanelDetails>\r\n       \r\n      <ExpansionPanelSummary>\r\n          <Paper className={classes.root}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n\r\n                  <TableCell align={'center'}><Typography variant=\"h6\">Nombre Funcionalidad</Typography></TableCell>\r\n                  <TableCell align={'center'}><Typography variant=\"h6\">Colaborador</Typography></TableCell>\r\n                  <TableCell align={'center'}><Typography variant=\"h6\">Estado</Typography></TableCell>\r\n                                   \r\n\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n              {/* {this.state.rows.Funcionalidad.map */}\r\n                {this.state.rows.length>1?this.state.rows.map(fn => (\r\n                  <TableRow >\r\n                    <TableCell align={'center'} component=\"th\" scope=\"row\">\r\n                      {fn.funcionalidad}                      \r\n                    </TableCell>\r\n                    <TableCell align={'center'} component=\"th\" scope=\"row\">\r\n                      {fn.colaborador}                      \r\n                    </TableCell>\r\n                    <TableCell align={'center'} component=\"th\" scope=\"row\">\r\n                      {fn.status +\" by \"+ (fn.status==\"deleted\"?fn.deletedby:fn.colaborador)}                      \r\n                   </TableCell>\r\n                  </TableRow>\r\n                )):\"\"}\r\n\r\n              </TableBody>\r\n            </Table>\r\n\r\n          </Paper>\r\n\r\n\r\n          </ExpansionPanelSummary>\r\n       \r\n          <ExpansionPanelSummary>\r\n          <Paper className={classes.root}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align={'center'}><Typography variant=\"h6\">Nombre Variable</Typography></TableCell>\r\n                  <TableCell align={'center'}><Typography variant=\"h6\">Colaborador</Typography></TableCell>\r\n                  <TableCell align={'center'}><Typography variant=\"h6\">Estado</Typography></TableCell>\r\n                  \r\n                  {/* <TableCell align=\"right\">Propiedad</TableCell>\r\n          <TableCell align=\"right\">Tipo de Dato</TableCell> */}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {this.state.rows.length>=1?this.state.rows.map(vr => (\r\n                  <TableRow >\r\n                    <TableCell align={'center'} component=\"th\" scope=\"row\">\r\n                      {vr.variable}\r\n                    </TableCell>\r\n                    <TableCell align={'center'} component=\"th\" scope=\"row\">\r\n                      {vr.colaborador}\r\n                    </TableCell>\r\n                    <TableCell align={'center'} component=\"th\" scope=\"row\">\r\n                      {vr.status +\" by \"+ (vr.status==\"deleted\"?vr.deletedby:vr.colaborador)}                      \r\n                    </TableCell>\r\n                    \r\n                  </TableRow>\r\n                )) : \"\"}\r\n\r\n              </TableBody>\r\n            </Table>\r\n\r\n          </Paper>\r\n\r\n          </ExpansionPanelSummary>\r\n \r\n         \r\n         <ExpansionPanelSummary>\r\n         <Paper className={classes.root}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align={'center'}><Typography variant=\"h6\">Nombre Responsable</Typography></TableCell>\r\n                  <TableCell align={'center'}><Typography variant=\"h6\">Colaborador</Typography></TableCell>\r\n                  <TableCell align={'center'}><Typography variant=\"h6\">Estado</Typography></TableCell>\r\n                               \r\n                  </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {this.state.rows.length>=1?this.state.rows.map(rp => (\r\n                  <TableRow >\r\n                    <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                      {rp.responsable}\r\n                    </TableCell>\r\n                    <TableCell align={'center'} component=\"th\" scope=\"row\">\r\n                      {rp.colaborador}                      \r\n                    </TableCell>\r\n                    <TableCell align={'center'} component=\"th\" scope=\"row\">\r\n                      {rp.status +\" by \"+ (rp.status==\"deleted\"?rp.deletedby:rp.colaborador)}                      \r\n                    </TableCell>\r\n                                       \r\n\r\n                  </TableRow>\r\n                )) : \"\"}\r\n\r\n              </TableBody>\r\n            </Table>\r\n\r\n          </Paper>\r\n          </ExpansionPanelSummary>\r\n          </ExpansionPanel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(useStyles)(ResumenPro);","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\nexport default function ContainedButtons() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div align=\"center\">\r\n      <Button variant=\"contained\" className={classes.button}><Link to=\"/Login\">Ver Proyectos</Link></Button>\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport {useParams} from \"react-router-dom\";\r\n\r\n\r\n\r\n// Importaciones de los componentes que se muestran en el asistente (5 Fases)\r\nimport DescripcionGene from '../SecuenciaNuevoPro/PrimeraFase/DescripcionGene';\r\nimport VistaFuncionalidad from '../SecuenciaNuevoPro/SegundaFase/VistaFuncionalidad.js'\r\nimport VistaVariables from '../SecuenciaNuevoPro/TerceraFase/VistaVariables.js'\r\nimport VistaResponsables from '../SecuenciaNuevoPro/CuartaFase/VistaResponsables.js'\r\nimport ResumenPro from '../SecuenciaNuevoPro/QuintaFase/ResumenPro.js'\r\nimport BtnHome from '../SecuenciaNuevoPro/QuintaFase/BtnHome.js'\r\n// Importacion de la imagen finalizado \r\n\r\nimport Image from '../../img/ImagenFinalizacion.jpg'\r\n\r\nvar firebase = require(\"firebase/app\");\r\n// Add the Firebase products that you want to use\r\nrequire(\"firebase/firestore\");\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '90%',\r\n    alignItems: 'center'\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n    alignItems: 'center'\r\n  },\r\n}));\r\n\r\n\r\nfunction getSteps() {\r\n  return ['Datos Generales', 'Agregar Funcionalidades', 'Agregar Variables', 'Agregar Responsables', 'Finalizar Sistema'];\r\n}\r\n\r\n\r\n\r\nexport default function HorizontalLinearStepper() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [skipped, setSkipped] = React.useState(new Set());\r\n  const [idloaded, SetId] = React.useState(\"\");\r\n  const steps = getSteps();\r\n  const [project, setProject] = useState({});\r\n  let { id,user} = useParams();\r\n\r\n  //Hooks tiene 2 parametros, [variableactual,funcion que se va a actualizar]= useState({estado inicial})\r\n\r\n  const setCurrentProject = nproject => {\r\n    if(project!=nproject){     \r\n      if(id!=\"new\"){\r\n        getData(id)\r\n      }      \r\n      else{\r\n        setProject(nproject)\r\n      }\r\n         \r\n    }\r\n      \r\n  };\r\n\r\n    //leer datos \r\n    const getData= id => {\r\n\r\n      var db = firebase.firestore();\r\n  \r\n      let ListRef=db.collection(\"ListColections\").doc(id);\r\n      let getDoc=ListRef.get()\r\n        .then(doc => {\r\n          let dRaw=doc.data()\r\n          dRaw[\"nameProject\"]=id\r\n          setProject(dRaw)\r\n          setActiveStep(1)\r\n      })\r\n  \r\n        .catch((err) => {\r\n          console.log('error de message', err);\r\n        });\r\n  \r\n   }\r\n\r\n  const getStepContent = step => {\r\n    switch (step) {\r\n      case 0:\r\n        return <DescripcionGene setCurrentProject = {setCurrentProject}  CurrentProject = {project} user={user}/>;\r\n      case 1:\r\n        return <VistaFuncionalidad setCurrentProject = {setCurrentProject} CurrentProject = {project}  user={user}/>;\r\n      case 2:\r\n        return <VistaVariables  setCurrentProject = {setCurrentProject} CurrentProject = {project}  user={user}/>;\r\n      case 3:\r\n        return <VistaResponsables setCurrentProject = {setCurrentProject} CurrentProject = {project}  user={user}/>;\r\n  \r\n      default:\r\n        return <ResumenPro setCurrentProject = {setCurrentProject} CurrentProject = {project}/>;\r\n    }\r\n  }\r\n\r\n  const isStepSkipped = step => {\r\n    return skipped.has(step);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    let newSkipped = skipped;\r\n    if (isStepSkipped(activeStep)) {\r\n      newSkipped = new Set(newSkipped.values());\r\n      newSkipped.delete(activeStep);\r\n    }\r\n\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n    setSkipped(newSkipped);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  };\r\n  \r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n //load project selected\r\n if(id!=\"new\" && idloaded!=id){\r\n  SetId(id)\r\n  setCurrentProject(id)\r\n}\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      <Stepper activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          const stepProps = {};\r\n          const labelProps = {};\r\n\r\n          if (isStepSkipped(index)) {\r\n            stepProps.completed = false;\r\n          }\r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepLabel {...labelProps}>{label}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      <Grid container spacing={24} justify=\"center\">\r\n        <div>\r\n          {activeStep === steps.length ? (\r\n            <div>\r\n               \r\n              <img src={Image} width=\"850\" height=\"400\" align=\"center\" />\r\n              <Typography className={classes.instructions} variant=\"h3\">\r\n               \r\n                Sistema Completado !!\r\n             <br />\r\n                <br />\r\n              </Typography>\r\n              <Typography variant=\"h5\" className={classes.instructions}>\r\n                ¿Que deseas hacer?\r\n             </Typography>\r\n\r\n              {/* botones que redirigen a visualizar los proyectos  o crear uno nuevo  */}\r\n              <BtnHome />\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleReset} className={classes.button}>\r\n                Crear Nuevo proyecto\r\n            </Button>\r\n\r\n            </div>\r\n          ) : (\r\n              <div >\r\n                <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n                <br />\r\n                <br />\r\n                <div align=\"center\">\r\n                  <Button variant=\"contained\" disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                    Atras\r\n              </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleNext}\r\n                    className={classes.button}\r\n                  \r\n                  >\r\n                    {activeStep === steps.length - 1 ? 'Finalizado' : 'Siguiente'}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            )}\r\n        </div>\r\n      </Grid>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Cabecera from './Componentes/PaginaInicio/header'\r\nimport Login from './Componentes/Login';\r\nimport Home from './Componentes/Home';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport CrearProject from './Componentes/NuevoProyecto/CrearProject'\r\nimport BtnHome from './Componentes/SecuenciaNuevoPro/QuintaFase/BtnHome.js'\r\n// import image from './img/ImagenPrincipal.jpeg'\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: {}\r\n    }\r\n  }\r\n  getUserData = (user) => {\r\n    this.setState({ user })\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div >\r\n\r\n        <Router>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n\r\n              <Cabecera user={this.state.user} />\r\n            </Grid>\r\n\r\n            {/* <Grid item xs={12}>\r\n          <br/>\r\n          <br/>\r\n          <img src={image} height=\"450\" width=\"800\"/>\r\n          \r\n          </Grid> */}\r\n\r\n            <Grid item xs={12} align=\"center\">\r\n\r\n\r\n              {/* Direccionamiento entre paginas  */}\r\n              <Route path=\"/login\" component={() => <Login getUserData={this.getUserData} />} />\r\n              <Route path=\"/CrearProject/:id/:user\" component={CrearProject} />\r\n              <Route path=\"/BtnHome\" component={BtnHome} />\r\n              <Route path=\"/Home\" component={Home} />\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </Router>\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\n"],"sourceRoot":""}